// * {
//     outline: 0.1px dashed black;
// }

@use "colors" as c;
@use "header";
@use "main";
@use "footer";

html {
    background-color: c.$bg-bg;
}

body {
    display: flex;
    flex-direction: column;
    align-items: stretch;

    box-sizing: border-box;
    min-height: 100vh; // Don't be shorter than the viewport
    max-width: 50em; // Max out the width at 50em

    margin: 0 auto; // Center the body
    padding: 1em; // Leave some space as if the body is a sheet of paper

    & > * {
        padding: 1em; // Section contents should be padded even further
    }

    & main {
        flex: 1; // Grow the main section to fill the remaining space
    }

    // Fonts

    font-family: system-ui, sans-serif;

    // Colors

    color: c.$text;
    background-color: c.$bg;

    box-shadow: 0 0 10px c.$shadow;
}

a {
    @include c.link(
        c.$link,
        c.$link-visited,
        c.$link-hover,
        c.$link-active,
    );

    text-decoration: none;
}

a[href^="http:"] {
    &::after {
        // \202F is a narrow NBSP
        content: "\202F(HTTP)";
        color: c.$warning;
        margin-right: 0.25em;
    }
}

a[href^="https:"] {
    &::after {
        // \202F is a narrow NBSP
        content: "\202F" url("/img/external.svg");
        margin-right: 0.25em;
    }
}

// Codeblocks
pre {
    // Scroll the codeblocks to the right
    overflow-x: auto;

    // Help the user see where to scroll and that there might be more code to the right
    padding: 1em;
    box-shadow: inset 0 0 5px c.$shadow;
}

// Inline code
p code {
    // Make the codeblocks actually the size of surrounding text
    font-size: 1.1em;

    color: c.$code;
    background-color: c.$code-bg;

    padding: 0 0.2em;
    border-radius: 0.2em;

    // Allow breaking words because it's better than overflowing.
    word-wrap: break-word;
}

.center-self {
    width: min-content;
    margin: 0 auto;
}
